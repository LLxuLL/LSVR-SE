{
  "seal": {
    "name": "seal",
    "description": "Editing configuration for seal models, capturing their behavior both in water and on land.",
    "operations": {
      "common": {
        "add": {
          "description": "Add a new seal to form a colony or 'rookery'",
          "parameters": {
            "direction": {
              "type": "string",
              "default": "right",
              "options": ["left", "right", "front", "back"],
              "description": "Direction to add the new seal"
            }
          },
          "atomic_operations": [
            {
              "operation": "copy_mesh",
              "parameters": {
                "mesh": "input_mesh"
              },
              "output": "copied_mesh"
            },
            {
              "operation": "get_bounds",
              "parameters": {
                "mesh": "input_mesh"
              },
              "output": "bounds"
            },
            {
              "operation": "calculate_translation_vector",
              "parameters": {
                "direction": "{direction}",
                "bounds": "bounds"
              },
              "output": "translation"
            },
            {
              "operation": "translate_mesh",
              "parameters": {
                "mesh": "copied_mesh",
                "vector": "translation"
              },
              "output": "translated_mesh"
            },
            {
              "operation": "combine_meshes",
              "parameters": {
                "meshes": ["input_mesh", "translated_mesh"]
              },
              "output": "result_mesh"
            }
          ]
        },
        "rotate": {
          "description": "Rotate the seal, as if turning on a rock",
          "parameters": {
            "angle": {
              "type": "float",
              "default": 45.0,
              "description": "Rotation angle (degrees) around its vertical axis"
            }
          },
          "atomic_operations": [
            {
              "operation": "rotate_mesh",
              "parameters": {
                "mesh": "input_mesh",
                "angle": "{angle}",
                "axis": [0, 1, 0]
              },
              "output": "result_mesh"
            }
          ]
        },
        "translate": {
          "description": "Translate the seal model",
          "parameters": {
            "vector": {
              "type": "list",
              "default": [2, 0, 0],
              "description": "Translation vector (X, Y, Z)"
            }
          },
          "atomic_operations": [
            {
              "operation": "translate_mesh",
              "parameters": {
                "mesh": "input_mesh",
                "vector": "{vector}"
              },
              "output": "result_mesh"
            }
          ]
        },
        "scale": {
          "description": "Scale the seal model (e.g., from pup to adult)",
          "parameters": {
            "factor": {
              "type": "float",
              "default": 1.5,
              "description": "Uniform scaling factor"
            },
            "center": {
              "type": "string",
              "default": "origin",
              "options": ["origin", "center"],
              "description": "Scaling center"
            }
          },
          "atomic_operations": [
            {
              "operation": "calculate_scale_center",
              "parameters": {
                "mesh": "input_mesh",
                "center_type": "{center}"
              },
              "output": "scale_center"
            },
            {
              "operation": "scale_mesh",
              "parameters": {
                "mesh": "input_mesh",
                "factor": "{factor}",
                "center": "scale_center"
              },
              "output": "result_mesh"
            }
          ]
        }
      },
      "specific": {
        "swim": {
          "description": "Simulates the seal's powerful and graceful swimming motion.",
          "parameters": {
            "speed": {
              "type": "float",
              "default": 1.0,
              "description": "The speed of the swimming animation."
            }
          },
          "atomic_operations": [
            {
              "operation": "perform_animation",
              "parameters": {
                "mesh": "input_mesh",
                "animation_name": "swim",
                "speed_multiplier": "{speed}"
              },
              "output": "result_mesh"
            }
          ]
        },
        "bark": {
          "description": "Makes the seal lift its head and open its mouth to bark.",
          "parameters": {},
          "atomic_operations": [
            {
              "operation": "perform_animation",
              "parameters": {
                "mesh": "input_mesh",
                "animation_name": "bark"
              },
              "output": "result_mesh"
            }
          ]
        },
        "balance_ball": {
          "description": "Places and balances a colorful ball on the seal's nose.",
          "parameters": {
            "ball_size": {
              "type": "float",
              "default": 0.3,
              "description": "The radius of the ball."
            },
            "ball_color": {
              "type": "list",
              "default": [255, 0, 0],
              "description": "The RGB color of the ball."
            }
          },
          "atomic_operations": [
            {
              "operation": "create_primitive_mesh",
              "parameters": {
                "shape": "sphere",
                "size": "{ball_size}",
                "color": "{ball_color}"
              },
              "output": "ball_mesh"
            },
            {
              "operation": "get_attachment_point",
              "parameters": {
                "mesh": "input_mesh",
                "point_name": "nose_tip"
              },
              "output": "nose_point"
            },
            {
              "operation": "align_mesh_to_point",
              "parameters": {
                "mesh": "ball_mesh",
                "reference_point": "nose_point"
              },
              "output": "aligned_ball"
            },
            {
              "operation": "combine_meshes",
              "parameters": {
                "meshes": ["input_mesh", "aligned_ball"]
              },
              "output": "result_mesh"
            }
          ]
        }
      }
    }
  }
}
